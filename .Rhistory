library(microbiome)
library(dplyr)
data(dietswap)
# Just use prevalent taxa to speed up examples
# (not absolute counts used in this example)
pseq <- core(dietswap, detection = 8^2, prevalence = 90/100)
# Pick sample subset
library(phyloseq)
pseq2 <- subset_samples(pseq, group == "DI" & nationality == "AFR" & timepoint.within.group == 1)
# Try another theme
# from https://github.com/hrbrmstr/hrbrthemes
library(hrbrthemes)
library(gcookbook)
library(tidyverse)
# Limit the analysis on core taxa and specific sample group
p <- plot_composition(pseq2,
taxonomic.level = "OTU",
sample.sort = "nationality",
x.label = "nationality") +
guides(fill = guide_legend(ncol = 1)) +
scale_y_percent() +
labs(x = "Samples", y = "Relative abundance (%)",
title = "Relative abundance data",
subtitle = "Subtitle",
caption = "Caption text.") +
theme_ipsum(grid="Y")
print(p)
# Averaged by group
p <- plot_composition(pseq2,
average_by = "bmi_group", transform = "compositional")
print(p)
tmp <- plot_composition(pseq2, plot.type = "heatmap", transform = "compositional",
sample.sort = "neatmap", otu.sort = "neatmap", mar = c(6, 13, 1, 1))
data(atlas1006)
# Use sample and taxa subset to speed up example
p0 <- subset_samples(atlas1006, DNA_extraction_method == "r")
# Define detection and prevalence thresholds to filter out rare taxa
p0 <- core(p0, detection = 10, prevalence = 0)
# For the available taxonomic levels
plot_taxa_prevalence(p0, "Phylum", detection = 10)
warnings()
rmarkdown::render('CoremicrobiotaAmplicon.rmd','md_document')
rmarkdown::render('CoremicrobiotaAmplicon.rmd','html_document')
# Example data
library(microbiome)
# Try another theme
# from https://github.com/hrbrmstr/hrbrthemes
# you can install these if you don't have it already.
# devtools::install_github("hrbrmstr/hrbrthemes")
library(hrbrthemes)
library(gcookbook)
library(tidyverse)
library(dplyr)
data("DynamicsIBD") #This data is currently unavialable due to size limitations
ps1 <- DynamicsIBD
DynamicsIBD
# First change the column names of the taxonomy table in phyloseq to following:
colnames(tax_table(ps1)) <- c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species" )
# Load data
library(microbiome)
data(peerj32)
# Rename the data
pseq <- peerj32$phyloseq
# Calculate compositional version of the data
# (relative abundances)
pseq.rel <- microbiome::transform(pseq, "compositional")
head(prevalence(pseq.rel, detection = 1/100, sort = TRUE))
head(prevalence(pseq.rel, detection = 1/100, sort = TRUE, count = TRUE))
core.taxa.standard <- core_members(pseq.rel, detection = 0, prevalence = 50/100)
pseq.core <- core(pseq.rel, detection = 0, prevalence = .5)
pseq.core <- core(pseq.rel, detection = 0, prevalence = .5)
core.taxa <- taxa(pseq.core)
core.abundance <- sample_sums(core(pseq.rel, detection = .01, prevalence = .95))
# With compositional (relative) abundances
det <- c(0, 0.1, 0.5, 2, 5, 20)/100
prevalences <- seq(.05, 1, .05)
plot_core(pseq.rel, prevalences = prevalences, detections = det, plot.type = "lineplot") + xlab("Relative Abundance (%)")
# Core with compositionals:
prevalences <- seq(.05, 1, .05)
detections <- 10^seq(log10(1e-3), log10(.2), length = 10)
# Also define gray color palette
gray <- gray(seq(0,1,length=5))
p <- plot_core(pseq.rel, plot.type = "heatmap", colours = gray,
prevalences = prevalences, detections = detections) +
xlab("Detection Threshold (Relative Abundance (%))")
print(p)
# Core with absolute counts and horizontal view:
# and minimum population prevalence (given as percentage)
detections <- 10^seq(log10(1), log10(max(abundances(pseq))/10), length = 10)
library(RColorBrewer)
p <- plot_core(pseq, plot.type = "heatmap",
prevalences = prevalences,
detections = detections,
colours = rev(brewer.pal(5, "Spectral")),
min.prevalence = .2, horizontal = TRUE)
print(p)
library(microbiome)
otu.file <-
system.file("extdata/qiita1629_otu_table.csv",
package='microbiome')
tax.file <- system.file("extdata/qiita1629_taxonomy_table.csv",
package='microbiome')
meta.file <- system.file("extdata/qiita1629_mapping_subset.csv",
package='microbiome')
pseq.csv <- read_phyloseq(
otu.file=otu.file,
taxonomy.file=tax.file,
metadata.file=meta.file, type = "simple")
otu.file <-
system.file("extdata/qiita1629_otu_table.csv",
package='microbiome')
tax.file <- system.file("extdata/qiita1629_taxonomy_table.csv",
package='microbiome')
meta.file <- system.file("extdata/qiita1629_mapping_subset.csv",
package='microbiome')
pseq.csv <- read_phyloseq(otu.file=otu.file,
taxonomy.file=tax.file,
metadata.file=meta.file, type = "simple")
otu.file
tax.file
meta.file
read_phyloseq(otu.file = otu.file, taxonomy.file = tax.file, metadata.file = meta.file, type = 'simple')
# Read the biom file
biom.file <-
system.file("extdata/qiita1629.biom",
package = "microbiome")
# Read the mapping/metadata file
meta.file <-
system.file("extdata/qiita1629_mapping.csv",
package = "microbiome")
# Make phyloseq object
pseq.biom <- read_phyloseq(otu.file = biom.file,
metadata.file = meta.file,
taxonomy.file = NULL, type = "biom")
library(microbiome)
otu.file <-    system.file("extdata/qiita1629_otu_table.csv",
package='microbiome')
tax.file <- system.file("extdata/qiita1629_taxonomy_table.csv",
package='microbiome')
meta.file <- system.file("extdata/qiita1629_mapping_subset.csv",
package='microbiome')
pseq.csv <- read_phyloseq(otu.file=otu.file,
taxonomy.file=tax.file,
metadata.file=meta.file, type = "simple")
# check the data
print(pseq.biom)
head(prevalence(pseq.rel, detection = 1, sort = TRUE))
head(prevalence(pseq.rel, detection = 1, sort = TRUE, count = TRUE))
core.taxa.standard <- core_members(pseq.rel, detection = 0, prevalence = 50/100)
core.taxa <- taxa(pseq.core)
class(core.taxa)
# get the taxonomy data
tax.mat <- tax_table(pseq.core)
tax.df <- as.data.frame(tax.mat)
# add the OTus to last column
tax.df$OTU <- rownames(tax.df)
# select taxonomy of only
# those OTUs that are core memebers based on the thresholds that were used.
core.taxa.class <- dplyr::filter(tax.df, rownames(tax.df) %in% core.taxa)
knitr::kable(head(core.taxa.class))
core.abundance <- sample_sums(core(pseq.rel, detection = .001, prevalence = .95))
# With compositional (relative) abundances
det <- c(0, 0.1, 0.5, 2, 5, 20)/100
prevalences <- seq(.05, 1, .05)
plot_core(pseq.rel, prevalences = prevalences, detections = det, plot.type = "lineplot") + xlab("Relative Abundance (%)")
# Core with compositionals:
prevalences <- seq(.05, 1, .05)
detections <- 10^seq(log10(1e-5), log10(.2), length = 10)
# Also define gray color palette
gray <- gray(seq(0,1,length=5))
p <- plot_core(pseq.rel, plot.type = "heatmap", colours = gray,
prevalences = prevalences, detections = detections, min.prevalence = .5) +
xlab("Detection Threshold (Relative Abundance (%))")
print(p)
# Same with the viridis color palette
# color-blind friendly and uniform
# options: viridis, magma, plasma, inferno
# https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html
# Also discrete=TRUE versions available
library(viridis)
print(p + scale_fill_viridis())
library(RColorBrewer)
library(knitr)
# Core with absolute counts and vertical view:
# and minimum population prevalence (given as percentage)
detections <- 10^seq(log10(1), log10(max(abundances(pseq.2))/10), length = 10)
library(RColorBrewer)
library(knitr)
# Core with absolute counts and vertical view:
# and minimum population prevalence (given as percentage)
detections <- 10^seq(log10(1), log10(max(abundances(pseq.2))/10), length = 10)
library(microbiome)
otu.file <-
system.file("extdata/qiita1629_otu_table.csv",
package='microbiome')
tax.file <- system.file("extdata/qiita1629_taxonomy_table.csv",
package='microbiome')
meta.file <- system.file("extdata/qiita1629_mapping_subset.csv",
package='microbiome')
pseq.csv <- read_phyloseq(
otu.file=otu.file,
taxonomy.file=tax.file,
metadata.file=meta.file, type = "simple")
# Read the biom file
biom.file <-
system.file("extdata/qiita1629.biom",
package = "microbiome")
# Read the mapping/metadata file
meta.file <-
system.file("extdata/qiita1629_mapping.csv",
package = "microbiome")
# Make phyloseq object
pseq.biom <- read_phyloseq(otu.file = biom.file,
metadata.file = meta.file,
taxonomy.file = NULL, type = "biom")
otu.file <- system.file(
"extdata/Baxter_FITs_Microbiome_2016_fit.final.tx.1.subsample.shared",
package='microbiome')
tax.file <- system.file(
"extdata/Baxter_FITs_Microbiome_2016_fit.final.tx.1.cons.taxonomy",
package='microbiome')
meta.file <- system.file(
"extdata/Baxter_FITs_Microbiome_2016_mapping.csv",
package='microbiome')
pseq.mothur <- read_phyloseq(otu.file=otu.file,
taxonomy.file =tax.file,
metadata.file=meta.file, type = "mothur")
# check the data
print(pseq.biom)
head(prevalence(pseq.rel, detection = 1, sort = TRUE))
head(prevalence(pseq.rel, detection = 1, sort = TRUE, count = TRUE))
core.taxa.standard <- core_members(pseq.rel, detection = 0, prevalence = 50/100)
pseq.core <- core(pseq.rel, detection = 0, prevalence = .5)
core.taxa <- taxa(pseq.core)
class(core.taxa)
# get the taxonomy data
tax.mat <- tax_table(pseq.core)
tax.df <- as.data.frame(tax.mat)
# add the OTus to last column
tax.df$OTU <- rownames(tax.df)
# select taxonomy of only
# those OTUs that are core memebers based on the thresholds that were used.
core.taxa.class <- dplyr::filter(tax.df, rownames(tax.df) %in% core.taxa)
knitr::kable(head(core.taxa.class))
core.abundance <- sample_sums(core(pseq.rel, detection = .001, prevalence = .95))
# With compositional (relative) abundances
det <- c(0, 0.1, 0.5, 2, 5, 20)/100
prevalences <- seq(.05, 1, .05)
plot_core(pseq.rel, prevalences = prevalences, detections = det, plot.type = "lineplot") + xlab("Relative Abundance (%)")
# Core with compositionals:
prevalences <- seq(.05, 1, .05)
detections <- 10^seq(log10(1e-5), log10(.2), length = 10)
# Also define gray color palette
gray <- gray(seq(0,1,length=5))
p <- plot_core(pseq.rel, plot.type = "heatmap", colours = gray,
prevalences = prevalences, detections = detections, min.prevalence = .5) +
xlab("Detection Threshold (Relative Abundance (%))")
print(p)
# Same with the viridis color palette
# color-blind friendly and uniform
# options: viridis, magma, plasma, inferno
# https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html
# Also discrete=TRUE versions available
library(viridis)
print(p + scale_fill_viridis())
library(RColorBrewer)
library(knitr)
# Core with absolute counts and vertical view:
# and minimum population prevalence (given as percentage)
detections <- 10^seq(log10(1), log10(max(abundances(pseq.2))/10), length = 10)
# Import output CSV files generated by write_phyloseq
pseq1 <- read_phyloseq(otu.file, taxonomy.file, metadata.file, type = "simple")
# Data citation doi: 10.1038/ncomms5344
library(microbiome)
data(atlas1006)
print(atlas1006)
# Data citation doi: 10.1038/ncomms7342
data(dietswap)
print(dietswap)
# Data citation doi: 10.7717/peerj.32
data(peerj32)
print(names(peerj32))
# Data citation doi: 10.1038/ncomms7342
data(dietswap)
print(dietswap)
m0 <- lmer(signal ~ Diet_Fat + (1|Rat), data = me, REML = TRUE, control = lmerControl(check.nobs.vs.nlev = 'ignore', check.nobs.vs.nRE = 'ignore'))
library(microbiome)
library(lme4)
me<-meta(phyl.genus)
library(readxl)
library(readr)
library(tibble)
library(phyloseq)
library(stringr)
library(microbiome)
da<-'Otut_abundanssit_metadata_ok.xlsx'
otal<-read_excel(da, sheet = 'OTU table')
#ken<-read_excel(da, sheet = 'Genus')
#ken<-as.data.frame(ken)
#genus1<-otal[-seq(1,7)]
library(dplyr)
#genus<-genus1[-2]
#genus<-as.data.frame(genus)
#genus$...8 <- genus$...8 %>% as.character
#collapsed_genus<-lapply(unique(genus$...8), function(i){
#  collapsed <- genus %>%
#    filter(...8 == i) %>%
#    dplyr::select(- ...8) %>%
#    colSums()
#  return(collapsed)
#}) %>%
#  do.call(rbind, .) %>%
#  as.data.frame() %>%
#  mutate(...8 = unique(genus$...8))
#View(collapsed_genus)
####
#dim(collapsed_genus)
#collapsed_genus<-na.omit(collapsed_genus)
#b<-collapsed_genus$...8
#rownames(collapsed_genus)<-b; collapsed_genus$...8<-NULL
#collapsed_genus<-as.matrix(collapsed_genus)
#####
#gen_ta<-otu_table(collapsed_genus, taxa_are_rows = T)
##############
metada<-read_excel(da, sheet = 'Metadata')
#View(otal)
ot<-otal[,-seq(3,9)]; ot$ID <- NULL
#View(ot)
tax<-otal[,-seq(10,86)]; tax$ID<- NULL
#View(tax)
cona<-c('Name','Kingdom','Phylum','Class','Order','Family','Genus','Species')
colnames(tax)<-cona
#View(colnames(ot))
#ot<-as.data.frame(ot)
idd<-ot$Name
#View(id)
#View(metada)
#metada$Group_Number<-metada$`Ryhmä nro`
#metada<-metada[,-3]
tax<-as.data.frame(tax)
rownames(tax)<-tax$Name; tax$Name <-NULL
#tax<-tax[,-1]
#ot<-ot[,-c(1,2)]
rownames(ot)<-idd; ot$Name <-NULL
ta<-tax_table(as.matrix(tax))
otuu<-otu_table(ot, taxa_are_rows = T)
d<-colnames(ot)
#metada<-metada[,-1]
#############################################
metada$Diet_Supplement<-metada$Diet
metada$Diet[metada$Diet=="High-fat + XOS"]<-"High-fat"
metada$Diet[metada$Diet=="Low-fat + XOS"]<-"Low-fat"
metada$Diet_Supplement[metada$Diet_Supplement=="High-fat"] <- "Placebo"
metada$Diet_Supplement[metada$Diet_Supplement=="Low-fat"] <- "Placebo"
metada$Diet_Supplement[metada$Diet_Supplement=="High-fat + XOS"| metada$Diet_Supplement=="Low-fat + XOS" ]<-"XOS"
metada$Diet_Supplement <- factor(metada$Diet_Supplement, levels = c("Placebo", "XOS"))
metada$Diet_Fat <- metada$Diet; metada$Diet <- NULL
metada$Diet_Fat <- gsub("-fat", "", metada$Diet_Fat)
metada$Diet_Fat <- factor(metada$Diet_Fat, levels = c("Low", "High"))
metada$Group_Num<- factor(metada$`Ryhmä nro`)
metada$`Ryhmä nro`<- NULL
metada$Location  <- factor(metada$`Suolen osa`); metada$`Suolen osa`<- NULL
#metadata_A$Sequencing.ID <- factor(metadata_A$`Sekvensointi ID`);
metada$`Sekvensointi ID`<- NULL
metada$Rat <- factor(metada$`Rotta ID`); metada$`Rotta ID`<- NULL
###################
#gen<-read_excel(da, sheet = 'Genus')
#ge1<-as.matrix(gen)
#ic<-ge1[,1]
#rownames(ge1)<-ic
rownames(metada)<-d
#######################################
sam<-sample_data(metada)
phyl<-phyloseq(otuu, ta, sam)
#phyl.genus<-phyloseq(gen_ta, ta, sam)
#pseq<-phyl
saveRDS(phyl, file = "data_processed/phyloseq.Rds")
phyl.genus<-aggregate_taxa(phyl, 'Genus')
library(readxl)
library(readr)
library(tibble)
library(phyloseq)
library(stringr)
library(microbiome)
da<-'Otut_abundanssit_metadata_ok.xlsx'
otal<-read_excel(da, sheet = 'OTU table')
#ken<-read_excel(da, sheet = 'Genus')
#ken<-as.data.frame(ken)
#genus1<-otal[-seq(1,7)]
library(dplyr)
#genus<-genus1[-2]
#genus<-as.data.frame(genus)
#genus$...8 <- genus$...8 %>% as.character
#collapsed_genus<-lapply(unique(genus$...8), function(i){
#  collapsed <- genus %>%
#    filter(...8 == i) %>%
#    dplyr::select(- ...8) %>%
#    colSums()
#  return(collapsed)
#}) %>%
#  do.call(rbind, .) %>%
#  as.data.frame() %>%
#  mutate(...8 = unique(genus$...8))
#View(collapsed_genus)
####
#dim(collapsed_genus)
#collapsed_genus<-na.omit(collapsed_genus)
#b<-collapsed_genus$...8
#rownames(collapsed_genus)<-b; collapsed_genus$...8<-NULL
#collapsed_genus<-as.matrix(collapsed_genus)
#####
#gen_ta<-otu_table(collapsed_genus, taxa_are_rows = T)
##############
metada<-read_excel(da, sheet = 'Metadata')
#View(otal)
ot<-otal[,-seq(3,9)]; ot$ID <- NULL
#View(ot)
tax<-otal[,-seq(10,86)]; tax$ID<- NULL
#View(tax)
cona<-c('Name','Kingdom','Phylum','Class','Order','Family','Genus','Species')
colnames(tax)<-cona
#View(colnames(ot))
#ot<-as.data.frame(ot)
idd<-ot$Name
#View(id)
#View(metada)
#metada$Group_Number<-metada$`Ryhmä nro`
#metada<-metada[,-3]
tax<-as.data.frame(tax)
rownames(tax)<-tax$Name; tax$Name <-NULL
#tax<-tax[,-1]
#ot<-ot[,-c(1,2)]
rownames(ot)<-idd; ot$Name <-NULL
ta<-tax_table(as.matrix(tax))
otuu<-otu_table(ot, taxa_are_rows = T)
d<-colnames(ot)
#metada<-metada[,-1]
#############################################
metada$Diet_Supplement<-metada$Diet
metada$Diet[metada$Diet=="High-fat + XOS"]<-"High-fat"
metada$Diet[metada$Diet=="Low-fat + XOS"]<-"Low-fat"
metada$Diet_Supplement[metada$Diet_Supplement=="High-fat"] <- "Placebo"
metada$Diet_Supplement[metada$Diet_Supplement=="Low-fat"] <- "Placebo"
metada$Diet_Supplement[metada$Diet_Supplement=="High-fat + XOS"| metada$Diet_Supplement=="Low-fat + XOS" ]<-"XOS"
metada$Diet_Supplement <- factor(metada$Diet_Supplement, levels = c("Placebo", "XOS"))
metada$Diet_Fat <- metada$Diet; metada$Diet <- NULL
metada$Diet_Fat <- gsub("-fat", "", metada$Diet_Fat)
metada$Diet_Fat <- factor(metada$Diet_Fat, levels = c("Low", "High"))
metada$Group_Num<- factor(metada$`Ryhmä nro`)
metada$`Ryhmä nro`<- NULL
metada$Location  <- factor(metada$`Suolen osa`); metada$`Suolen osa`<- NULL
#metadata_A$Sequencing.ID <- factor(metadata_A$`Sekvensointi ID`);
metada$`Sekvensointi ID`<- NULL
metada$Rat <- factor(metada$`Rotta ID`); metada$`Rotta ID`<- NULL
###################
#gen<-read_excel(da, sheet = 'Genus')
#ge1<-as.matrix(gen)
#ic<-ge1[,1]
#rownames(ge1)<-ic
rownames(metada)<-d
#######################################
sam<-sample_data(metada)
phyl<-phyloseq(otuu, ta, sam)
#phyl.genus<-phyloseq(gen_ta, ta, sam)
#pseq<-phyl
saveRDS(phyl, file = "data_processed/phyloseq.Rds")
phyl.genus<-aggregate_taxa(phyl, 'Genus')
library(readxl)
getwd()
rmarkdown::render('Core.rmd','html_document')
rmarkdown::render('Core.rmd','html_document')
# Render all files
for (myfile in fs) {
times[[myfile]] <- system.time(rmarkdown::render(myfile))
}
# source('init.R')
library(microbiome)
library(phyloseq)
library(netresponse)
library(MASS)
library(dplyr)
library(tidyr)
library(ggplot2)
library(devtools)
library(ggplot2)
library(microbiome)
library(rmarkdown)
library(knitr)
library(knitcitations)
# ---------------------------------------------
# List the Rmd files to render
fs <- sample(list.files(pattern = ".Rmd$")) # Random order
# List rendering options
knitr::opts_chunk$set(fig.path = "figure/", dev="CairoPNG")
times <- c()
# Render all files
for (myfile in fs) {
times[[myfile]] <- system.time(rmarkdown::render(myfile))
}
rmarkdown::render("info.Rmd")
# git add + commit + push
system("git add figure/*")
system("git add *.Rmd")
system("git add *.html")
system("git commit -a -m'homepage update'")
system("git push origin master")
fs <- sample(list.files(pattern = ".Rmd$")) # Random order
knitr::opts_chunk$set(fig.path = "figure/", dev="CairoPNG")
times <- c()
for (myfile in fs) {
times[[myfile]] <- system.time(rmarkdown::render(myfile))
}

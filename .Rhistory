l<- list(b.pla, b.lgg)
df<- melt(l)
df$L1[df$L1 == '1']<- 'placebo'
df$L1[df$L1 == '2']<- 'LGG'
df$L1
df$L1<- factor(df$L1, levels = c('placebo','LGG'))
p<- ggplot(df, aes(x = L1, y = value)) + geom_boxplot()
p
library(reshape)
l<- list(b.pla, b.lgg)
df<- melt(l)
df$L1[df$L1 == '1']<- 'placebo'
df$L1[df$L1 == '2']<- 'LGG'
df$L1<- factor(df$L1, levels = c('placebo','LGG'))
#metada$Diet[metada$Diet=="High-fat + XOS"]<-"High-fat"
p<- ggplot(df, aes(x = L1, y = value)) + geom_boxplot()
plot(p)
library(reshape)
l<- list(b.pla, b.lgg)
df<- melt(l)
df$L1[df$L1 == '1']<- 'placebo'
df$L1[df$L1 == '2']<- 'LGG'
df$L1<- factor(df$L1, levels = c('placebo','LGG'))
#metada$Diet[metada$Diet=="High-fat + XOS"]<-"High-fat"
p<- ggplot(df, aes(x = L1, y = value)) + geom_boxplot()
plot(p)
p<- ggplot(df, aes(x = L1, y = value)) + geom_boxplot()+ xlab('')
plot(p)
p<- ggplot(df, aes(x = L1, y = value)) + geom_boxplot()+ xlab('') + ylim(20)
p<- ggplot(df, aes(x = L1, y = value)) + geom_boxplot()+ xlab('') + ylim(seq(1:20))
library(reshape)
l<- list(b.pla, b.lgg)
df<- melt(l)
df$L1[df$L1 == '1']<- 'placebo'
df$L1[df$L1 == '2']<- 'LGG'
df$L1<- factor(df$L1, levels = c('placebo','LGG'))
p<- ggplot(df, aes(x = L1, y = value)) + geom_boxplot()+ xlab('')
plot(p)
getwd()
rmarkdown::render('Betadiversity.Rmd','all')
install.packages(c("gcookbook", "hrbrthemes"))
# Example data
library(microbiome)
library(dplyr)
data(dietswap)
# Make sure we use functions from correct package
transform <- microbiome::transform
# Just use prevalent taxa to speed up examples
# (not absolute counts used in this example)
pseq <- core(dietswap, detection = 50, prevalence = 50/100)
# Pick sample subset
library(phyloseq)
pseq2 <- subset_samples(pseq, group == "DI" & nationality == "AFR" & timepoint.within.group == 1)
# Normal western adults
data(atlas1006)
pseq3 <- atlas1006 %>%
subset_samples(DNA_extraction_method == "r") %>%
aggregate_taxa(level = "Phylum") %>%
microbiome::transform(transform = "compositional")
# Try another theme
# from https://github.com/hrbrmstr/hrbrthemes
library(hrbrthemes)
library(gcookbook)
library(tidyverse)
theme_set(theme_bw(21))
p <- pseq3 %>%
plot_composition(sample.sort = "Firmicutes", otu.sort = "abundance") +
# Set custom colors
scale_fill_manual(values = default_colors("Phylum")[taxa(pseq3)])
print(p)
# Limit the analysis on core taxa and specific sample group
p <- plot_composition(pseq2,
taxonomic.level = "Genus",
sample.sort = "nationality",
x.label = "nationality") +
guides(fill = guide_legend(ncol = 1)) +
scale_y_percent() +
labs(x = "Samples", y = "Relative abundance (%)",
title = "Relative abundance data",
subtitle = "Subtitle",
caption = "Caption text.") +
theme_ipsum(grid="Y")
print(p)
# Averaged by group
p <- plot_composition(pseq2,
average_by = "bmi_group", transform = "compositional")
print(p)
p <- NULL
p <- plot_composition(microbiome::transform(pseq, "compositional"),
plot.type = "heatmap",
sample.sort = "neatmap", otu.sort = "neatmap")
data(atlas1006)
# Use sample and taxa subset to speed up example
p0 <- subset_samples(atlas1006, DNA_extraction_method == "r")
# Define detection and prevalence thresholds to filter out rare taxa
p0 <- core(p0, detection = 10, prevalence = 0)
# For the available taxonomic levels
plot_taxa_prevalence(p0, "Phylum", detection = 10)
# Example data
library(microbiome)
# Try another theme
# from https://github.com/hrbrmstr/hrbrthemes
# you can install these if you don't have it already.
# devtools::install_github("hrbrmstr/hrbrthemes")
#library(devtools)
# install_github("microsud/microbiomeutilities")
library(hrbrthemes)
library(microbiomeutilities)
library(devtools)
devtools::install_github("microsud/microbiomeutilities")
# Example data
library(microbiome)
# Try another theme
# from https://github.com/hrbrmstr/hrbrthemes
# you can install these if you don't have it already.
# devtools::install_github("hrbrmstr/hrbrthemes")
#library(devtools)
# install_github("microsud/microbiomeutilities")
library(hrbrthemes)
library(microbiomeutilities)
library(gcookbook)
library(tidyverse)
library(dplyr)
data("zackular2014")
#data("DynamicsIBD") #This data is currently unavialable due to size limitations
ps1 <- zackular2014
colnames(tax_table(ps1))
# First change the column names of the taxonomy table in phyloseq to following:
colnames(tax_table(ps1)) <- c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species" )
tax_table(ps1)[tax_table(ps1)[,"Kingdom"]== "NA", "Kingdom" ] <- "Unidentified_Kingdom"
tax_table(ps1)[tax_table(ps1)[,"Phylum"]== "p__", "Phylum" ] <- "p__Unidentified_Phylum"
# make a dataframe for taxonomy information.
taxic <- as.data.frame(ps1@tax_table)
otu.df <- abundances(ps1)
# make a dataframe for OTU information.
otu.df <- as.data.frame(otu.df)
# check the rows and columns
# head(otu.df)
# Add the OTU ids from OTU table into the taxa table at the end.
taxic$OTU <- row.names.data.frame(otu.df)
# You can see that we now have extra taxonomy levels.
colnames(taxic)
# convert it into a matrix.
taxmat <- as.matrix(taxic)
# convert into phyloseq compaitble file.
new.tax <- tax_table(taxmat)
# incroporate into phyloseq Object
tax_table(ps1) <- new.tax
p <- plot_composition(microbiome::transform(pseq, "compositional"),
plot.type = "neatmap",
sample.sort = "neatmap", otu.sort = "neatmap")
pseq
heatmap
p <- plot_composition(microbiome::transform(pseq, "compositional"),
plot.type = "heatmap",
sample.sort = "neatmap", otu.sort = "neatmap")
library("devtools")
#install_github("microbiome/microbiome")
# Load data
library(microbiome)
data(peerj32)
# Rename the data
pseq <- peerj32$phyloseq
# Calculate compositional version of the data
# (relative abundances)
pseq.rel <- microbiome::transform(pseq, "compositional")
pseq.core <- core(pseq.rel, detection = 0, prevalence = .5)
pseq.core
pseq.core2 <- aggregate_rare(pseq.rel, "Genus", detection = 0, prevalence = .5)
pseq.core2
core.taxa <- taxa(pseq.core)
core.taxa
pseq.core <- core(pseq.rel, detection = 0, prevalence = .5)
pseq.core
pseq.rel
pseq.core
pseq.rel
# With compositional (relative) abundances
det <- c(0, 0.1, 0.5, 2, 5, 20)/100
prevalences <- seq(.05, 1, .05)
plot_core(pseq.rel, prevalences = prevalences, detections = det, plot.type = "lineplot") + xlab("Relative Abundance (%)")
plot_core(pseq.core, prevalences = prevalences, detections = det, plot.type = "lineplot") + xlab("Relative Abundance (%)")
plot_core(pseq.core, prevalences = prevalences, detections = det, plot.type = "lineplot") +
xlab("Relative Abundance (%)")
prevalences <- seq(.05, 1, .05)
plot_core(pseq.rel, prevalences = prevalences, detections = det, plot.type = "lineplot") +
xlab("Relative Abundance (%)")
p <- plot_composition(microbiome::transform(pseq, "compositional"),
plot.type = "heatmap",
sample.sort = "neatmap", otu.sort = "neatmap", verbose = 'log10')
p <- plot_composition(microbiome::transform(pseq, "compositional"),
plot.type = "heatmap",
sample.sort = "neatmap", otu.sort = "neatmap", verbose = log10)
p <- plot_composition(microbiome::transform(pseq, "compositional"),
plot.type = "heatmap",
sample.sort = "neatmap", otu.sort = "neatmap", verbose = 'Z')
p <- plot_composition(microbiome::transform(pseq, "compositional"),
plot.type = "heatmap",
sample.sort = "neatmap", otu.sort = "neatmap", verbose = T)
plot_composition(pseq, sample.sort = "Firmicutes",
otu.sort = "abundance", verbose = TRUE) +
scale_fill_manual(values = default_colors("Phylum")[taxa(pseq)])
p <- plot_composition(microbiome::transform(pseq, "compositional"), plot.type = "heatmap",
sample.sort = "neatmap", otu.sort = "neatmap")
p <- plot_composition(microbiome::transform(pseq, "compositional"),
plot.type = "heatmap",
sample.sort = "neatmap", otu.sort = "neatmap")
p <- plot_composition(microbiome::transform(pseq, "compositional"),
plot.type = "heatmap",otu.sort = "neatmap")
print(p)
p <- plot_composition(microbiome::transform(pseq, "compositional"),
plot.type = "heatmap")
pseq.rel<- microbiome::transform(pseq, "compositional")
p <- plot_composition(pseq.rel, plot.type = "heatmap", sample.sort = "neatmap", otu.sort = "neatmap")
p <- plot_composition(pseq.rel, plot.type = "heatmap", sample.sort = "neatmap", otu.sort = "neatmap", verbose = T)
p <- plot_composition(pseq.rel, plot.type = "heatmap", sample.sort = "neatmap", otu.sort = "neatmap", verbose = F)
p <- plot_composition(pseq.rel, plot.type = "heatmap", sample.sort = "neatmap", otu.sort = "neatmap", verbose = 'compositional')
p <- plot_composition(pseq.rel, plot.type = "heatmap", sample.sort = "neatmap", otu.sort = "neatmap", verbose = 'compositional')
p <- plot_composition(pseq.rel, plot.type = "heatmap", sample.sort = "neatmap", otu.sort = "neatmap", verbose = compositional)
p <- plot_composition(pseq.rel, plot.type = "heatmap", sample.sort = "heatmap", otu.sort = "heatmap", verbose = 'compositional')
p <- plot_composition(pseq.rel, plot.type = "heatmap", sample.sort = "heatmap", otu.sort = "heatmap")
data(atlas1006)
# Use sample and taxa subset to speed up example
p0 <- subset_samples(atlas1006, DNA_extraction_method == "r")
# Define detection and prevalence thresholds to filter out rare taxa
p0 <- core(p0, detection = 10, prevalence = 0)
# For the available taxonomic levels
plot_taxa_prevalence(p0, "Phylum", detection = 10)
# Example data
library(microbiome)
# Try another theme
# from https://github.com/hrbrmstr/hrbrthemes
# you can install these if you don't have it already.
# devtools::install_github("hrbrmstr/hrbrthemes")
#library(devtools)
# install_github("microsud/microbiomeutilities")
library(hrbrthemes)
library(microbiomeutilities)
library(gcookbook)
library(tidyverse)
library(dplyr)
data("zackular2014")
#data("DynamicsIBD") #This data is currently unavialable due to size limitations
ps1 <- zackular2014
colnames(tax_table(ps1))
# First change the column names of the taxonomy table in phyloseq to following:
colnames(tax_table(ps1)) <- c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species" )
tax_table(ps1)[tax_table(ps1)[,"Kingdom"]== "NA", "Kingdom" ] <- "Unidentified_Kingdom"
tax_table(ps1)[tax_table(ps1)[,"Phylum"]== "p__", "Phylum" ] <- "p__Unidentified_Phylum"
# make a dataframe for taxonomy information.
taxic <- as.data.frame(ps1@tax_table)
otu.df <- abundances(ps1)
# make a dataframe for OTU information.
otu.df <- as.data.frame(otu.df)
# check the rows and columns
# head(otu.df)
# Add the OTU ids from OTU table into the taxa table at the end.
taxic$OTU <- row.names.data.frame(otu.df)
# You can see that we now have extra taxonomy levels.
colnames(taxic)
# convert it into a matrix.
taxmat <- as.matrix(taxic)
# convert into phyloseq compaitble file.
new.tax <- tax_table(taxmat)
# incroporate into phyloseq Object
tax_table(ps1) <- new.tax
# Example data
library(microbiome)
library(dplyr)
data(dietswap)
# Make sure we use functions from correct package
transform <- microbiome::transform
# Just use prevalent taxa to speed up examples
# (not absolute counts used in this example)
pseq <- core(dietswap, detection = 50, prevalence = 50/100)
# Pick sample subset
library(phyloseq)
pseq2 <- subset_samples(pseq, group == "DI" & nationality == "AFR" & timepoint.within.group == 1)
# Normal western adults
data(atlas1006)
pseq3 <- atlas1006 %>%
subset_samples(DNA_extraction_method == "r") %>%
aggregate_taxa(level = "Phylum") %>%
microbiome::transform(transform = "compositional")
# Try another theme
# from https://github.com/hrbrmstr/hrbrthemes
library(hrbrthemes)
library(gcookbook)
library(tidyverse)
theme_set(theme_bw(21))
p <- pseq3 %>%
plot_composition(sample.sort = "Firmicutes", otu.sort = "abundance") +
# Set custom colors
scale_fill_manual(values = default_colors("Phylum")[taxa(pseq3)])
print(p)
# Limit the analysis on core taxa and specific sample group
p <- plot_composition(pseq2,
taxonomic.level = "Genus",
sample.sort = "nationality",
x.label = "nationality") +
guides(fill = guide_legend(ncol = 1)) +
scale_y_percent() +
labs(x = "Samples", y = "Relative abundance (%)",
title = "Relative abundance data",
subtitle = "Subtitle",
caption = "Caption text.") +
theme_ipsum(grid="Y")
print(p)
# Averaged by group
p <- plot_composition(pseq2,
average_by = "bmi_group", transform = "compositional")
print(p)
p <- NULL
p <- plot_composition(microbiome::transform(pseq, "compositional"),
plot.type = "heatmap",
sample.sort = "neatmap", otu.sort = "neatmap")
data(atlas1006)
# Use sample and taxa subset to speed up example
p0 <- subset_samples(atlas1006, DNA_extraction_method == "r")
# Define detection and prevalence thresholds to filter out rare taxa
p0 <- core(p0, detection = 10, prevalence = 0)
# For the available taxonomic levels
plot_taxa_prevalence(p0, "Phylum", detection = 10)
# Example data
library(microbiome)
# Try another theme
# from https://github.com/hrbrmstr/hrbrthemes
# you can install these if you don't have it already.
# devtools::install_github("hrbrmstr/hrbrthemes")
#library(devtools)
# install_github("microsud/microbiomeutilities")
library(hrbrthemes)
library(microbiomeutilities)
library(gcookbook)
library(tidyverse)
library(dplyr)
data("zackular2014")
#data("DynamicsIBD") #This data is currently unavialable due to size limitations
ps1 <- zackular2014
colnames(tax_table(ps1))
# First change the column names of the taxonomy table in phyloseq to following:
colnames(tax_table(ps1)) <- c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species" )
tax_table(ps1)[tax_table(ps1)[,"Kingdom"]== "NA", "Kingdom" ] <- "Unidentified_Kingdom"
tax_table(ps1)[tax_table(ps1)[,"Phylum"]== "p__", "Phylum" ] <- "p__Unidentified_Phylum"
# make a dataframe for taxonomy information.
taxic <- as.data.frame(ps1@tax_table)
otu.df <- abundances(ps1)
# make a dataframe for OTU information.
otu.df <- as.data.frame(otu.df)
# check the rows and columns
# head(otu.df)
# Add the OTU ids from OTU table into the taxa table at the end.
taxic$OTU <- row.names.data.frame(otu.df)
# You can see that we now have extra taxonomy levels.
colnames(taxic)
# convert it into a matrix.
taxmat <- as.matrix(taxic)
# convert into phyloseq compaitble file.
new.tax <- tax_table(taxmat)
# incroporate into phyloseq Object
tax_table(ps1) <- new.tax
rmarkdown::render('Composition.Rmd', 'all')
session_info()
update.packages('microbiome')
install_github('microbiome/microbiome', 'devel')
detach("package:MicrobeDS", unload = TRUE)
detach("package:microbiomeutilities", unload = TRUE)
remove.packages("microbiome", lib="~/R/win-library/4.0")
install_github('microbiome/microbiome', 'devel')
packageVersion('microbiome')
library(microbiome)
packageVersion('microbiome')
packageVersion(microbiome)
microbiome::plot_composition(pseq)
p <- plot_composition(microbiome::transform(pseq, "compositional"),
plot.type = "heatmap",
sample.sort = "neatmap", otu.sort = "neatmap")
p <- plot_composition(microbiome::transform(pseq, "compositional"))
print(p)
p <- plot_composition(microbiome::transform(pseq, "compositional"), plot.type = 'heatmap')
p <- plot_composition(microbiome::transform(pseq, "compositional"), plot.type = 'neatmap')
p <- plot_composition(microbiome::transform(pseq, "compositional"), plot.type = heatmap)
print(p)
p <- plot_composition(microbiome::transform(pseq, "compositional"),
plot.type = "heatmap",
sample.sort = "neatmap", otu.sort = "neatmap")
# Example data
library(microbiome)
library(dplyr)
data(dietswap)
# Just use prevalent taxa to speed up examples
# (not absolute counts used in this example)
pseq <- core(dietswap, detection = 8^2, prevalence = 90/100)
# Pick sample subset
library(phyloseq)
pseq2 <- subset_samples(pseq, group == "DI" & nationality == "AFR" & timepoint.within.group == 1)
# Try another theme
# from https://github.com/hrbrmstr/hrbrthemes
library(hrbrthemes)
library(gcookbook)
library(tidyverse)
# Limit the analysis on core taxa and specific sample group
p <- plot_composition(pseq2,
taxonomic.level = "OTU",
sample.sort = "nationality",
x.label = "nationality") +
guides(fill = guide_legend(ncol = 1)) +
scale_y_percent() +
labs(x = "Samples", y = "Relative abundance (%)",
title = "Relative abundance data",
subtitle = "Subtitle",
caption = "Caption text.") +
theme_ipsum(grid="Y")
print(p)
# Averaged by group
p <- plot_composition(pseq2,
average_by = "bmi_group", transform = "compositional")
print(p)
tmp <- plot_composition(pseq2, plot.type = "heatmap", transform = "compositional",
sample.sort = "neatmap", otu.sort = "neatmap", mar = c(6, 13, 1, 1))
pseq2
tmp <- plot_composition(pseq2, plot.type = "heatmap", transform = "compositional", sample.sort = "neatmap", otu.sort = "neatmap", mar = c(6, 13, 1, 1))
tmp <- plot_composition(pseq2, plot.type = "heatmap", transform = "compositional", sample.sort = "neatmap")
tmp <- plot_composition(pseq2, plot.type = "heatmap", transform = "compositional")
tmp <- plot_composition(pseq2, transform = "compositional")
tmp
tmp <- plot_composition(pseq2, transform = "compositional", type = 'heatmap')
tmp
tmp <- plot_composition(pseq2, plot.type = "heatmap", transform = "compositional",
sample.sort = "neatmap", otu.sort = "neatmap", mar = c(6, 13, 1, 1))
data(atlas1006)
# Use sample and taxa subset to speed up example
p0 <- subset_samples(atlas1006, DNA_extraction_method == "r")
# Define detection and prevalence thresholds to filter out rare taxa
p0 <- core(p0, detection = 10, prevalence = 0)
# For the available taxonomic levels
plot_taxa_prevalence(p0, "Phylum", detection = 10)
tmp <- plot_composition(pseq2, plot.type = "heatmap", transform = "compositional",
sample.sort = "neatmap", otu.sort = "neatmap", mar = c(6, 13, 1, 1))
rmarkdown::render('CompositionAmplicondata.Rmd','all')
# Example data
library(microbiome)
library(dplyr)
data(dietswap)
# Just use prevalent taxa to speed up examples
# (not absolute counts used in this example)
pseq <- core(dietswap, detection = 8^2, prevalence = 90/100)
# Pick sample subset
library(phyloseq)
pseq2 <- subset_samples(pseq, group == "DI" & nationality == "AFR" & timepoint.within.group == 1)
# Try another theme
# from https://github.com/hrbrmstr/hrbrthemes
library(hrbrthemes)
library(gcookbook)
library(tidyverse)
# Limit the analysis on core taxa and specific sample group
p <- plot_composition(pseq2,
taxonomic.level = "OTU",
sample.sort = "nationality",
x.label = "nationality") +
guides(fill = guide_legend(ncol = 1)) +
scale_y_percent() +
labs(x = "Samples", y = "Relative abundance (%)",
title = "Relative abundance data",
subtitle = "Subtitle",
caption = "Caption text.") +
theme_ipsum(grid="Y")
print(p)
# Averaged by group
p <- plot_composition(pseq2,
average_by = "bmi_group", transform = "compositional")
print(p)
# Load the example data
set.seed(134)
library(microbiome)
library(dplyr)
data(atlas1006)
# Rename the example data
pseq <- atlas1006
# Focus on specific subset
pseq <- pseq %>% subset_samples(DNA_extraction_method == "r")
# Use relative abundances
pseq <- microbiome::transform(pseq, "compositional")
# Keep only the prevalent taxa to speed up examples
pseq <- core(pseq, detection = .1/100, prevalence = 99/100)
# For cross-sectional analysis, use only the baseline time point:
pseq0 <- baseline(pseq)
intermediate.stability <- intermediate_stability(pseq, output = "scores")
# Bimodality is better estimated from log10 abundances
pseq0.log10 <- microbiome::transform(pseq0, "log10")
set.seed(4433)
# In practice, it is recommended to use more bootstrap iterations than in this example
bimodality.score <- bimodality(pseq0.log10, method = "potential_analysis",
bs.iter = 10, peak.threshold = 10,
min.density = 10)
# Bimodality is better estimated from log10 abundances
pseq0.log10 <- microbiome::transform(pseq0, "log10")
pseq0.log10
set.seed(4433)
# In practice, it is recommended to use more bootstrap iterations than in this example
bimodality.score <- bimodality(pseq0.log10, method = "potential_analysis",
bs.iter = 10, peak.threshold = 10,
min.density = 10)
# In practice, it is recommended to use more bootstrap iterations than in this example
bimodality.score <- bimodality(pseq0.log10, method = "potential_analysis", bs.iter = 10, peak.threshold = 10, min.density = 10)
taxa <- taxa(pseq0)
df <- data.frame(group = taxa,
intermediate.stability = intermediate.stability[taxa],
bimodality = bimodality.score[taxa])
# Log10 abundance for a selected taxonomic group
# Pick the most bimodal taxa as an example
tax  <- names(which.max(bimodality.score))
